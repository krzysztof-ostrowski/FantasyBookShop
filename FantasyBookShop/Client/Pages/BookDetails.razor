@page "/book/{id:int}"
@inject IBookService BookService
@inject ICartService CartService
@if(book == null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@book.ImageUrl" alt="@book.Title"/>
        </div>
        <div class="media-body">
            <h2 class="mb-0">@book.Title</h2>
            <p>@book.Description</p>
            @if(book.Variants!=null && book.Variants.Count > 1)
            {
                <div class="mb-3">
                    <select class="form-select alert-dark" @bind="currentTypeId">
                        @foreach (var variant in book.Variants)
                        {
                            <option value="@variant.BookTypeId">@variant.BookType.Name</option>
                        }
                    </select>
                </div>

            }
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">
                        $@GetSelectedVariant().OriginalPrice
                    </h6>
                }

                <h4 class="price">
                    $@GetSelectedVariant().Price
                </h4>
            }
            <button class="btn btn-primary" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
                </button>
        </div>
    </div>
}

@code {
    private Book? book = null;
    private string message;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading book";
        var result = await BookService.GetBook(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            book = result.Data;

            if (book.Variants.Count>0)
            {
                currentTypeId = book.Variants.ElementAt(0).BookTypeId;
            }
        }

    }

    private BookVariant GetSelectedVariant()
    {
        var variant = book.Variants.FirstOrDefault(v => v.BookTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var bookVariant = GetSelectedVariant();
        var cartItem = new CartItem
            {
                BookId = bookVariant.BookId,
                BookTypeId = bookVariant.BookTypeId
            };

            await CartService.AddToCart(cartItem);
    }
}
